\section{Review Results}

\subsection{Cloud IoT and testing}
It was in 2019, when \citeauthor{bertolino2019systematic} concluded in their \textit{systematic review on cloud testing} that the IoT domain could certainly benefit from the cloud potential, but that it had not yet done so in large measure. They found that IoT was mentioned in many studies, but when it came to the status of IoT \textit{testing} in the cloud, numbers fell apart - at least compared with web or mobile testing. Despite of available studies and cloud testing tools and services like to CTaaS, a cloud-based TaaS (Testing as a Service) environment for example, that supports SaaS performance and scalability testing, only few of their respondents having IoT cloud products maintained a mature IoT testing environment. Half of them did not have a testing environment at all at that point \cite{bertolino2019systematic}.

In the past four years there has been progress in research as well as in industries employing IoT in regard to cloud testing. First of all, more and more cloud infrastructure is provided for IoT. Cloud computing offers expanded performance and scalability resp. elasticity. IoT devices benefit of this extraordinary deal of capacity to share information (\citeauthor{laghari2021review}). Moreover, costs for resource consumption arise by degree of usage. However, \citeauthor{laghari2021review} emphasize downsides of cloud computing in terms of IoT. Especially the data ownership and communication latency represent challenges. The latter is where fog computing (also known as edge computing) comes into play. Fog IoT instead of recording, processing or analysing data centrally, namely in the cloud, reorganizes the IT structure by locating some capabilities at the edge of the network - somewhere "in the middle" between the data gathering hardware and the cloud. The minimized physical distance has a positive impact on latency reduction and the resolvement of bandwidth issues \cite{forcan2020cloud}. At the same time, fog IoT can improve safety and compliance \cite{laghari2021review} - it can contribute to the adherence to regulatory requirements e.g. in terms of restrictions towards the location of data stores. Fog IoT does not replace cloud IoT, the two complement each other.

\begin{figure}[htbp]
\centerline{\includegraphics[scale=0.28]{images/cloud-fog-based_sg_architecture.png}}
\caption{Cloud-fog-based smart grid architecture by \citeauthor{forcan2020cloud}}
\label{fig}
\end{figure}

IoT testing poses new challenges. \citeauthor{kim2018iot} sum up aptly: \textit{"The amount of IoT devices and their collaborative behavior causes new challenges to the scalability of traditional software testing, and the heterogenity of IoT devices increases costs and the complexity of coordination of testing due to the number of variables."} They introduce how IoT Testing as a Service (IoT TaaS) \textit{"aims to resolve constraints regarding coordination, costs, and scalability issues of traditional software testing in the context of standards-based development of IoT devices"}. They design how a prospective IoT testing framework supports new requirements of IoT testing, like automatic test operation, flexible protocols, reduced costs, and better scalability and they present related work and research on various IoT test systems. Basically, they propose to rethink traditional interoperability and conformance testing approaches and semantic validation in IoT by putting the core testing logic into a so-called IoT-TaaS cloud.

\subsection{Smart grid testing}

The introduction of communication into a power grid exposes the system to various types of attacks \cite{smadi2021comprehensive} and multiplies its complexity. Due to the high criticality of smart grids, it is crucial to test robustness, safety and reliability of smart grid components upfront their integration into the real power grid. Happenings such as the cyber attack on the US power grid in 2009 or the attack on Ukraine's power grid in December 2015, resulting in large-scale blackouts \cite{xue2019research}, raised the awareness of the community towards the vulnerability of smart grid systems and the necessity of verifying the systems compliance towards these non-functional requirements in a systematic and thorough manner. However, mainly due to the complexity of smart grids, this is a very challenging and expensive task.

According to \citeauthor{el2018cyber}, security requirements of a smart grid encompass far more than only the resistance against "classical" cyber attacks, like eavesdropping, interception and tampering, or denial of service attacks, listed by \citeauthor{xue2019research}. It is basically about any threat of confidentiality, availability, integrity - requirements defined by the US National Institute of Standards and Technology (NIST) - and about accountability \cite{el2018cyber} throughout the entire system. The successful adherence to these four key requirements is not only threatened by intended malicious attacks, but also by the heterogeneous nature of a smart grid itself. The communication between devices requires aggregation of data and translation between protocols which can enable accidental breaches and vulnerabilities, simply because a feature in one protocol could not be translated properly into another \cite{el2018cyber} for example.

Smart grids testing faces mostly the same difficulties like in general does IoT testing. Smart grids represent highly heterogenous soft- and hardware landscapes. Testing is either time-consuming and expensive or lacks reality. \citeauthor{smadi2021comprehensive} mention that the complex nature of a smart grid structure requires the implementation of testbeds which include different capabilities for extensive experimental verifications and that so far most testbeds do not provide complete hardware and software platforms to test tightly coupled smart grids sufficiently. They suggest the usage of testbeds simulating power grids, where control, operation, and security algorithms can be explored, developed, evaluated, and validated. Instead of performing tests directly on the real physical system, the actual grid should be replicated e.g. with testbeds that allow to perform tests in an isolated environment. \citeauthor{smadi2021comprehensive} differentiate between simulation- and physical-based testbeds. The first type is known to be economical because physical devices are simulated with software. The physical-based are more realistic thanks to the employment of real devices, but their extensive setup is far more costly.

\subsection{Cloud test environment for smart grids}

Cloud technologies are a substantial part in the rise of smart grids. IoT devices, like smart meters, compose a sensor network to collect physical world data, which is uploaded into commercial clouds, that provide flexible computational resources as utilities to build up the cloud based application systems \cite{li2019performance}. 
\begin{figure}[htbp]
\centerline{\includegraphics[scale=0.412]{images/example_of_iot-cloud_architecture.png}}
\caption{Example of IoT-Cloud architecture by \citeauthor{li2019performance}. The application layer tends to be cloud-based.}
\label{fig}
\end{figure}
According to \citeauthor{li2019performance}, cloud computing helps to manage devices, that are widely spread among large space, more efficiently. Various sources indicate the great potential of cloud computing with regard to the feasibility of large-scale systems with variable resource needs. Rapid elasticity, ubiquitous network access, and highly-reliable services are some of the desirable features of cloud computing that are attractive for building cloud-assisted data-intensive smart grid applications \cite{demir2018securing}.

Cloud testing in IoT as well as in smart grids usually refers to the intersection of ToC and TiC categories, i.e. \textit{testing of the cloud in the cloud (ToiC)} \cite{bertolino2019systematic}.

\citeauthor{8449080} have developed a framework that addresses some challenges of smart grid testing. Basically they present a \textit{distributed framework for real-time management and co-simulation of demand response (DR) in smart grids}. It is meant to address especially the lack of reality, accuracy, efficiency and configurability in previous approaches and to improve the evaluation of interoperability of DR algorithms with multiple smart grid control and management strategies. DR is the automatical balancing of power supply and demand in smart grids and seeks to influence consumers e.g. by financial incentives, in order to distribute power consumption evenly through time i.e. to diminish consumptions peaks. While traditional power grids adjust the power supply depending on the demand, DR aims for adjusting the demand for power. \citeauthor{8449080}'s simulation framework is equipped with some novelties, like a very realistic testbed, which allows to easily assess DR algorithms in a plug-and-play fashion, evaluation of interoperability of DR algorithms with other smart grid control and management strategies, very accurate and efficient simulation of the smart grid, or configurability of involved components. \citeauthor{8449080} highlight the importance of simulating power systems in order to assess DR service feasiblity in terms of network communication, data management, and the resulting smart grid behavior. They claim that none of the existing simulation frameworks is capable to perform simulation of DR policies, while integrating also real-time simulation.

The distributed simulation framework, that they propose, consists of a cloud-based advanced multimetering infrastructure (AMI), the energy aggregation platform (EAP) and the real-time simulator (RTS). The EAP leverages upon the AMI, called FLEXMETER, with one or more digital RTS \cite{8449080}. FLEXMETER is an open source framework for measuring the change in energy consumption, driven by the EU Horizon 2020 Inititative. It provides EAP with necessary information to perform DR services. The FLEXMETER's technology integration layer, is made up of different technology integration adapters (TIA), that can deal with real or virtual IoT devices likewise. Like this, an easy switch from simulation environment to a real-world smart grid and vice-versa as well as bidirectional data exchange between real-world devices and RTS \cite{8449080} are possible.

\begin{figure}[htbp]
\centerline{\includegraphics[scale=0.55]{images/distributed_iot_test_infrastructure.png}}
\caption{Scheme of the proposed framework by \citeauthor{8449080}}
\label{fig}
\end{figure}

The authors stress that the entire framework for DR follows the modern software design patterns, to build distributed architecture that can be deployed on cloud systems. The FLEXMETER infrastructure is offered to stakeholders as platform as a service and the EAP as software as a service.

In view of the \textit{ever large cyber attack surface caused by the exponential growth of the IoT}, \citeauthor{atalay2020digital} recommend a more integral approach to perform smart grid security testing. Instead of only simulating parts of a system for testing purposes, they suggest the employment of a digital twin for continuous and comprehensive penetration testing. A digital twin is the virtual construction of a (physical) object or a system and can include multiple simulations, algorithms, and services. Once a digital twin is set up with real-world data, it can be used for execution of experiments, tests, or simulations. \citeauthor{atalay2020digital} argue that digital twins offer the opportunity, firstly, to model cyber physical objects, whose behavior may not be captured with a purely simulation-based approach accurately and secondly, to run realistic attacks outside the real infrastructure. Running attacks on the actual grid itself, could cause major service disruptions or infrastructure damage \cite{atalay2020digital}. The digital twins concept separates the system into three layers: The physical tier consists of mainly hardware or hardware-near components like storage, terminal, perception and networking resources. The virtual tier composes of libraries for models, environment states, and optimization parameters. Finally the decision-making tier with of algorithms mapping the physical tiers to the virtual tiers, optimizing monitored data, and raising alarms in case of anomalies. \citeauthor{atalay2020digital} propose to employ a private cloud architecture for smart grids due to its strengths in terms of high availability, scalability and flexibility. For the edge-computing systems, they recommend the usage of \textit{cloudlets} which represent small-scale wireless sensor networks. The main advantage of using \textit{cloudlets} is the decentralized device management and that the data can be analysed in a manageable number of devices' own microecosystem.

Besides the big advantages of smart grids integrating the cloud, \citeauthor{demir2018securing} highlight the security risks smart grids are exposed to, due to the cloud's usage of the public network and shared resources. They propose a \textit{hybrid hierarchical cloud-extension concept (HHCEC)}, with a 3-layer cloud-assisted architecture, that takes smart grid security requirements into account, with the implementation of \textit{hybrid and geographically dispersed structure and a specialized broker-based publish-subscribe communication system}, a \textit{strong proactive DDoS attack defence mechanism}, and a token-based authentication mechanism. For testing their prototype, they used (amongst other) \textit{Amazon Elastic Compute Cloud (EC2)}. EC2, as part of Amazon.com's cloud-computing platform, rent virtual computers to users, so that they can run their own applications on them. \citeauthor{demir2018securing} used two EC2 micro instances, one that represents a broker server (first layer of HHCEC), and the second for running the smart grid application (third layer of HHCEC). They assessed the effectiveness of HHCEC in a large network by emulating the proof-of-concept in EC2. HHCEC and the way it was evaluated represent a good example of \textit{Testing of the cloud in the cloud (ToiC)}.

\begin{figure}[htbp]
\centerline{\includegraphics[scale=0.35]{images/securing_the_cloud-assisted_smart_grid.png}}
\caption{Hybrid hierarchical cloud concept (HHCEC) by \citeauthor{demir2018securing}}
\label{fig}
\end{figure}



